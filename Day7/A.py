import math
shc_dict = {1:4, 2:4, 3: 2, 4: 2, 5 : 3, 6: 3, 7: 4, 8: 4, 9: 2, 99: 1}
pos = {1: 1, 2: 1, 3: 1, 4: 0, 5: 1, 6: 0, 7: 1, 8: 1, 9: 0, 99 : 0}
def int_code(mem, com, rel, inp=''):
    sch = 0
    #input handeling
    if(com[0] < 100):
        #print('no')
        for i in range(len(com) -1 - pos[com[0]]):
            com[i+1] = mem[com[i+1]]
    else:
        remander = (str(math.floor(com[0]/100)))[::-1]
        for i in range(len(remander) - len(com) - 2):
            #print("added digit" + str(remander))
            remander += '0'
        #print(len(remander))
        for e in range(len(remander)):
            if(remander[e] == '0'):
                #print(' zerooo')
                com[e+1] = mem[com[e+1]]
            elif(remander[e] == '1'):
                #print('one one a day at' + str(com[0]))
                pass
            elif(remander == '2'):
                com[e+1] = mem[com[e+1]+rel]
                #print('rel is ok')
            else:
                #print(remander[e])
                pass
    com[0] = com[0]%100
    if(com[0] == 99):
        return(('BRAKE', 0, 0));
    elif(com[0] == 1):
        mem[com[3]] = com[1] + com[2]
        return(('ADD', mem, sch))
    elif(com[0] == 2):
        mem[com[3]] = com[1] * com[2]
        return(('MUL', mem, sch))
    elif(com[0] == 3):
        if(inp == ''):
            return(('REQUEST_INPUT'))
        else:
            mem[com[1]] = int(input("e: ")) #command[(cur, 'inp')]
            return(('INPUT' + str(inp), mem, sch))
    elif(com[0] == 4):
        return(('PRINT', mem, sch, com[1]))
    elif(com[0] == 5):
        if(com[1] != 0): sch = com[2];
        else: 
            sch = 'bu'
        return(('COMPARE_JUMP_5', mem, sch))
    elif(com[0] == 6):
        if(com[1] == 0): sch = com[2];
        else: 
            sch = 'bu'
        return(('COMPARE_JUMP_6', mem, sch))
    elif(com[0] == 7):
        mem[com[3]] = int(com[1] < com[2]);
        return(('COMPARE_WRITE_7', mem, sch))
    elif(com[0] == 8):
        mem[com[3]] = int(com[1] == com[2]);
        return(('COMPARE_WRITE_8', mem, sch))
    elif(com[0] == 9):
        return(('CHANGE_REL', mem, sch, rel+com[1]))
    else:
        print('problem' + str(com[0]))
#print(int_code([1002,4,3,4,33], [1002,4,3,4]))
mem = [3,225,1,225,6,6,1100,1,238,225,104,0,1101,32,43,225,101,68,192,224,1001,224,-160,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1001,118,77,224,1001,224,-87,224,4,224,102,8,223,223,1001,224,6,224,1,223,224,223,1102,5,19,225,1102,74,50,224,101,-3700,224,224,4,224,1002,223,8,223,1001,224,1,224,1,223,224,223,1102,89,18,225,1002,14,72,224,1001,224,-3096,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1101,34,53,225,1102,54,10,225,1,113,61,224,101,-39,224,224,4,224,102,8,223,223,101,2,224,224,1,223,224,223,1101,31,61,224,101,-92,224,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1102,75,18,225,102,48,87,224,101,-4272,224,224,4,224,102,8,223,223,1001,224,7,224,1,224,223,223,1101,23,92,225,2,165,218,224,101,-3675,224,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,1102,8,49,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1107,226,226,224,1002,223,2,223,1005,224,329,1001,223,1,223,1007,677,226,224,1002,223,2,223,1006,224,344,1001,223,1,223,108,677,226,224,102,2,223,223,1006,224,359,1001,223,1,223,7,226,226,224,1002,223,2,223,1005,224,374,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,389,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,404,1001,223,1,223,1107,677,226,224,1002,223,2,223,1005,224,419,1001,223,1,223,108,226,226,224,102,2,223,223,1006,224,434,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,449,1001,223,1,223,1108,677,226,224,102,2,223,223,1005,224,464,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,479,1001,223,1,223,1008,226,226,224,102,2,223,223,1005,224,494,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,509,101,1,223,223,8,226,677,224,1002,223,2,223,1006,224,524,1001,223,1,223,1007,226,226,224,1002,223,2,223,1006,224,539,101,1,223,223,1008,677,677,224,1002,223,2,223,1006,224,554,101,1,223,223,1108,677,677,224,102,2,223,223,1006,224,569,101,1,223,223,1107,226,677,224,102,2,223,223,1005,224,584,1001,223,1,223,8,677,226,224,1002,223,2,223,1006,224,599,101,1,223,223,1008,677,226,224,102,2,223,223,1006,224,614,1001,223,1,223,7,226,677,224,1002,223,2,223,1005,224,629,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,644,101,1,223,223,8,677,677,224,102,2,223,223,1005,224,659,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,674,101,1,223,223,4,223,99,226] + [0] + [None for _ in range(1000000)]
point =0;
rel = 0;
sch = shc_dict[mem[point]%100]
while True:
    point =0;
    rel = 0;
    sch = shc_dict[mem[point]%100]
    while True:
        try:
            sch = shc_dict[mem[point]%100]
        except IndexError as e:
            print(e)
            print(point)
            break
        com = mem[point : point+sch]
        #print(mem)
        res = int_code(mem, com, rel)
        #print(res)
        if(res[0] == 'BRAKE'):
            print('BRAKE')
            break
        elif(res[0] == 'PRINT'):
            print(str(res[3]))
        elif(res == 'REQUEST_INPUT'):
            inpt = input('input needed: ')
            res = int_code(mem, com, rel, inpt)
        elif(res[0] == 'CHANGE_REL'):
            #print(str(rel) + ' before' + ' + ' + str(res[3]))
            #print(res)
            rel = res[3]
            #print(str(rel) + ' after')
        elif('COMPARE_JUMP' in res[0]):
            if(res[2] != 'bu'):
                point = res[2] - sch
        else:
            #print(res)
            pass
        #print(mem)
        mem = res[1]
        #print(mem)
        #sch += res[2]
        point += sch;
        #print(point)